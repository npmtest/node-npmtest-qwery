{"/home/travis/build/npmtest/node-npmtest-qwery/test.js":"/* istanbul instrument in package npmtest_qwery */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-qwery/lib.npmtest_qwery.js":"/* istanbul instrument in package npmtest_qwery */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_qwery = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_qwery = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-qwery/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-qwery && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_qwery */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_qwery\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_qwery.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_qwery.rollup.js'] =\n            local.assetsDict['/assets.npmtest_qwery.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_qwery.__dirname +\n                    '/lib.npmtest_qwery.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-qwery/node_modules/qwery/qwery.js":"/*!\n  * @preserve Qwery - A selector engine\n  * https://github.com/ded/qwery\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n})('qwery', this, function () {\n\n  var classOnly = /^\\.([\\w\\-]+)$/\n    , doc = document\n    , win = window\n    , html = doc.documentElement\n    , nodeType = 'nodeType'\n  var isAncestor = 'compareDocumentPosition' in html ?\n    function (element, container) {\n      return (container.compareDocumentPosition(element) & 16) == 16\n    } :\n    function (element, container) {\n      container = container == doc || container == window ? html : container\n      return container !== element && container.contains(element)\n    }\n\n  function toArray(ar) {\n    return [].slice.call(ar, 0)\n  }\n\n  function isNode(el) {\n    var t\n    return el && typeof el === 'object' && (t = el.nodeType) && (t == 1 || t == 9)\n  }\n\n  function arrayLike(o) {\n    return (typeof o === 'object' && isFinite(o.length))\n  }\n\n  function flatten(ar) {\n    for (var r = [], i = 0, l = ar.length; i < l; ++i) arrayLike(ar[i]) ? (r = r.concat(ar[i])) : (r[r.length] = ar[i])\n    return r\n  }\n\n  function uniq(ar) {\n    var a = [], i, j\n    label:\n    for (i = 0; i < ar.length; i++) {\n      for (j = 0; j < a.length; j++) {\n        if (a[j] == ar[i]) {\n          continue label\n        }\n      }\n      a[a.length] = ar[i]\n    }\n    return a\n  }\n\n\n  function normalizeRoot(root) {\n    if (!root) return doc\n    if (typeof root == 'string') return qwery(root)[0]\n    if (!root[nodeType] && arrayLike(root)) return root[0]\n    return root\n  }\n\n  /**\n   * @param {string|Array.<Element>|Element|Node} selector\n   * @param {string|Array.<Element>|Element|Node=} opt_root\n   * @return {Array.<Element>}\n   */\n  function qwery(selector, opt_root) {\n    var m, root = normalizeRoot(opt_root)\n    if (!root || !selector) return []\n    if (selector === win || isNode(selector)) {\n      return !opt_root || (selector !== win && isNode(root) && isAncestor(selector, root)) ? [selector] : []\n    }\n    if (selector && arrayLike(selector)) return flatten(selector)\n\n\n    if (doc.getElementsByClassName && selector == 'string' && (m = selector.match(classOnly))) {\n      return toArray((root).getElementsByClassName(m[1]))\n    }\n    // using duck typing for 'a' window or 'a' document (not 'the' window || document)\n    if (selector && (selector.document || (selector.nodeType && selector.nodeType == 9))) {\n      return !opt_root ? [selector] : []\n    }\n    return toArray((root).querySelectorAll(selector))\n  }\n\n  qwery.uniq = uniq\n\n  return qwery\n}, this);\n","/home/travis/build/npmtest/node-npmtest-qwery/node_modules/qwery/integration/ender.js":"/*!\n  * =============================================================\n  * Ender: open module JavaScript framework (https://ender.no.de)\n  * Build: ender build domready bonzo\n  * =============================================================\n  */\n\n/*!\n  * Ender: open module JavaScript framework (client-lib)\n  * copyright Dustin Diaz & Jacob Thornton 2011 (@ded @fat)\n  * http://ender.no.de\n  * License MIT\n  */\n!function (context) {\n\n  // a global object for node.js module compatiblity\n  // ============================================\n\n  context['global'] = context\n\n  // Implements simple module system\n  // losely based on CommonJS Modules spec v1.1.1\n  // ============================================\n\n  var modules = {}\n    , old = context.$\n\n  function require (identifier) {\n    // modules can be required from ender's build system, or found on the window\n    var module = modules[identifier] || window[identifier]\n    if (!module) throw new Error(\"Requested module '\" + identifier + \"' has not been defined.\")\n    return module\n  }\n\n  function provide (name, what) {\n    return (modules[name] = what)\n  }\n\n  context['provide'] = provide\n  context['require'] = require\n\n  function aug(o, o2) {\n    for (var k in o2) k != 'noConflict' && k != '_VERSION' && (o[k] = o2[k])\n    return o\n  }\n\n  function boosh(s, r, els) {\n    // string || node || nodelist || window\n    if (typeof s == 'string' || s.nodeName || (s.length && 'item' in s) || s == window) {\n      els = ender._select(s, r)\n      els.selector = s\n    } else els = isFinite(s.length) ? s : [s]\n    return aug(els, boosh)\n  }\n\n  function ender(s, r) {\n    return boosh(s, r)\n  }\n\n  aug(ender, {\n      _VERSION: '0.3.6'\n    , fn: boosh // for easy compat to jQuery plugins\n    , ender: function (o, chain) {\n        aug(chain ? boosh : ender, o)\n      }\n    , _select: function (s, r) {\n        return (r || document).querySelectorAll(s)\n      }\n  })\n\n  aug(boosh, {\n    forEach: function (fn, scope, i) {\n      // opt out of native forEach so we can intentionally call our own scope\n      // defaulting to the current item and be able to return self\n      for (i = 0, l = this.length; i < l; ++i) i in this && fn.call(scope || this[i], this[i], i, this)\n      // return self for chaining\n      return this\n    },\n    $: ender // handy reference to self\n  })\n\n  ender.noConflict = function () {\n    context.$ = old\n    return this\n  }\n\n  if (typeof module !== 'undefined' && module.exports) module.exports = ender\n  // use subscript notation as extern for Closure compilation\n  context['ender'] = context['$'] = context['ender'] || ender\n\n}(this);\n\n!function () {\n\n  var module = { exports: {} }, exports = module.exports;\n\n  !function (name, definition) {\n    if (typeof define == 'function') define(definition)\n    else if (typeof module != 'undefined') module.exports = definition()\n    else this[name] = this['domReady'] = definition()\n  }('domready', function (ready) {\n  \n    var fns = [], fn, f = false\n      , doc = document\n      , testEl = doc.documentElement\n      , hack = testEl.doScroll\n      , domContentLoaded = 'DOMContentLoaded'\n      , addEventListener = 'addEventListener'\n      , onreadystatechange = 'onreadystatechange'\n      , loaded = /^loade|c/.test(doc.readyState)\n  \n    function flush(f) {\n      loaded = 1\n      while (f = fns.shift()) f()\n    }\n  \n    doc[addEventListener] && doc[addEventListener](domContentLoaded, fn = function () {\n      doc.removeEventListener(domContentLoaded, fn, f)\n      flush()\n    }, f)\n  \n  \n    hack && doc.attachEvent(onreadystatechange, (fn = function () {\n      if (/^c/.test(doc.readyState)) {\n        doc.detachEvent(onreadystatechange, fn)\n        flush()\n      }\n    }))\n  \n    return (ready = hack ?\n      function (fn) {\n        self != top ?\n          loaded ? fn() : fns.push(fn) :\n          function () {\n            try {\n              testEl.doScroll('left')\n            } catch (e) {\n              return setTimeout(function() { ready(fn) }, 50)\n            }\n            fn()\n          }()\n      } :\n      function (fn) {\n        loaded ? fn() : fns.push(fn)\n      })\n  })\n\n  provide(\"domready\", module.exports);\n\n  !function ($) {\n    var ready = require('domready')\n    $.ender({domReady: ready})\n    $.ender({\n      ready: function (f) {\n        ready(f)\n        return this\n      }\n    }, true)\n  }(ender);\n\n}();\n\n!function () {\n\n  var module = { exports: {} }, exports = module.exports;\n\n  /*!\n    * Bonzo: DOM Utility (c) Dustin Diaz 2011\n    * https://github.com/ded/bonzo\n    * License MIT\n    */\n  !function (name, definition) {\n    if (typeof module != 'undefined') module.exports = definition()\n    else if (typeof define == 'function' && define.amd) define(name, definition)\n    else this[name] = definition()\n  }('bonzo', function() {\n    var context = this\n      , old = context.bonzo\n      , win = window\n      , doc = win.document\n      , html = doc.documentElement\n      , parentNode = 'parentNode'\n      , query = null\n      , specialAttributes = /^checked|value|selected$/\n      , specialTags = /select|fieldset|table|tbody|tfoot|td|tr|colgroup/i\n      , table = [ '<table>', '</table>', 1 ]\n      , td = [ '<table><tbody><tr>', '</tr></tbody></table>', 3 ]\n      , option = [ '<select>', '</select>', 1 ]\n      , tagMap = {\n          thead: table, tbody: table, tfoot: table, colgroup: table, caption: table\n          , tr: [ '<table><tbody>', '</tbody></table>', 2 ]\n          , th: td , td: td\n          , col: [ '<table><colgroup>', '</colgroup></table>', 2 ]\n          , fieldset: [ '<form>', '</form>', 1 ]\n          , legend: [ '<form><fieldset>', '</fieldset></form>', 2 ]\n          , option: option\n          , optgroup: option }\n      , stateAttributes = /^checked|selected$/\n      , ie = /msie/i.test(navigator.userAgent)\n      , uidMap = {}\n      , uuids = 0\n      , digit = /^-?[\\d\\.]+$/\n      , dattr = /^data-(.+)$/\n      , px = 'px'\n      , setAttribute = 'setAttribute'\n      , getAttribute = 'getAttribute'\n      , byTag = 'getElementsByTagName'\n      , features = function() {\n          var e = doc.createElement('p')\n          e.innerHTML = '<a href=\"#x\">x</a><table style=\"float:left;\"></table>'\n          return {\n            hrefExtended: e[byTag]('a')[0][getAttribute]('href') != '#x' // IE < 8\n            , autoTbody: e[byTag]('tbody').length !== 0 // IE < 8\n            , computedStyle: doc.defaultView && doc.defaultView.getComputedStyle\n            , cssFloat: e[byTag]('table')[0].style.styleFloat ? 'styleFloat' : 'cssFloat'\n            , transform: function () {\n                var props = ['webkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'Transform'], i\n                for (i = 0; i < props.length; i++) {\n                  if (props[i] in e.style) return props[i]\n                }\n              }()\n          }\n        }()\n      , trimReplace = /(^\\s*|\\s*$)/g\n      , unitless = { lineHeight: 1, zoom: 1, zIndex: 1, opacity: 1 }\n      , trim = String.prototype.trim ?\n          function (s) {\n            return s.trim()\n          } :\n          function (s) {\n            return s.replace(trimReplace, '')\n          }\n  \n    function classReg(c) {\n      return new RegExp(\"(^|\\\\s+)\" + c + \"(\\\\s+|$)\")\n    }\n  \n    function each(ar, fn, scope) {\n      for (var i = 0, l = ar.length; i < l; i++) fn.call(scope || ar[i], ar[i], i, ar)\n      return ar\n    }\n  \n    function deepEach(ar, fn, scope) {\n      for (var i = 0, l = ar.length; i < l; i++) {\n        if (isNode(ar[i])) {\n          deepEach(ar[i].childNodes, fn, scope);\n          fn.call(scope || ar[i], ar[i], i, ar);\n        }\n      }\n      return ar;\n    }\n  \n    function camelize(s) {\n      return s.replace(/-(.)/g, function (m, m1) {\n        return m1.toUpperCase()\n      })\n    }\n  \n    function decamelize(s) {\n      return s ? s.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() : s\n    }\n  \n    function data(el) {\n      el[getAttribute]('data-node-uid') || el[setAttribute]('data-node-uid', ++uuids)\n      uid = el[getAttribute]('data-node-uid')\n      return uidMap[uid] || (uidMap[uid] = {})\n    }\n  \n    function clearData(el) {\n      uid = el[getAttribute]('data-node-uid')\n      uid && (delete uidMap[uid])\n    }\n  \n    function dataValue(d) {\n      try {\n        return d === 'true' ? true : d === 'false' ? false : d === 'null' ? null : !isNaN(d) ? parseFloat(d) : d;\n      } catch(e) {}\n      return undefined\n    }\n  \n    function isNode(node) {\n      return node && node.nodeName && node.nodeType == 1\n    }\n  \n    function some(ar, fn, scope, i) {\n      for (i = 0, j = ar.length; i < j; ++i) if (fn.call(scope, ar[i], i, ar)) return true\n      return false\n    }\n  \n    function styleProperty(p) {\n        (p == 'transform' && (p = features.transform)) ||\n          (/^transform-?[Oo]rigin$/.test(p) && (p = features.transform + \"Origin\")) ||\n          (p == 'float' && (p = features.cssFloat))\n        return p ? camelize(p) : null\n    }\n  \n    var getStyle = features.computedStyle ?\n      function (el, property) {\n        var value = null\n          , computed = doc.defaultView.getComputedStyle(el, '')\n        computed && (value = computed[property])\n        return el.style[property] || value\n      } :\n  \n      (ie && html.currentStyle) ?\n  \n      function (el, property) {\n        if (property == 'opacity') {\n          var val = 100\n          try {\n            val = el.filters['DXImageTransform.Microsoft.Alpha'].opacity\n          } catch (e1) {\n            try {\n              val = el.filters('alpha').opacity\n            } catch (e2) {}\n          }\n          return val / 100\n        }\n        var value = el.currentStyle ? el.currentStyle[property] : null\n        return el.style[property] || value\n      } :\n  \n      function (el, property) {\n        return el.style[property]\n      }\n  \n    // this insert method is intense\n    function insert(target, host, fn) {\n      var i = 0, self = host || this, r = []\n        // target nodes could be a css selector if it's a string and a selector engine is present\n        // otherwise, just use target\n        , nodes = query && typeof target == 'string' && target.charAt(0) != '<' ? query(target) : target\n      // normalize each node in case it's still a string and we need to create nodes on the fly\n      each(normalize(nodes), function (t) {\n        each(self, function (el) {\n          var n = !el[parentNode] || (el[parentNode] && !el[parentNode][parentNode]) ?\n            function () {\n              var c = el.cloneNode(true)\n              // check for existence of an event cloner\n              // preferably https://github.com/fat/bean\n              // otherwise Bonzo won't do this for you\n              self.$ && self.cloneEvents && self.$(c).cloneEvents(el)\n              return c\n            }() : el\n          fn(t, n)\n          r[i] = n\n          i++\n        })\n      }, this)\n      each(r, function (e, i) {\n        self[i] = e\n      })\n      self.length = i\n      return self\n    }\n  \n    function xy(el, x, y) {\n      var $el = bonzo(el)\n        , style = $el.css('position')\n        , offset = $el.offset()\n        , rel = 'relative'\n        , isRel = style == rel\n        , delta = [parseInt($el.css('left'), 10), parseInt($el.css('top'), 10)]\n  \n      if (style == 'static') {\n        $el.css('position', rel)\n        style = rel\n      }\n  \n      isNaN(delta[0]) && (delta[0] = isRel ? 0 : el.offsetLeft)\n      isNaN(delta[1]) && (delta[1] = isRel ? 0 : el.offsetTop)\n  \n      x != null && (el.style.left = x - offset.left + delta[0] + px)\n      y != null && (el.style.top = y - offset.top + delta[1] + px)\n  \n    }\n  \n    function hasClass(el, c) {\n      return classReg(c).test(el.className)\n    }\n    function addClass(el, c) {\n      el.className = trim(el.className + ' ' + c)\n    }\n    function removeClass(el, c) {\n      el.className = trim(el.className.replace(classReg(c), ' '))\n    }\n  \n    // this allows method calling for setting values\n    // example:\n  \n    // bonzo(elements).css('color', function (el) {\n    //   return el.getAttribute('data-original-color')\n    // })\n  \n    function setter(el, v) {\n      return typeof v == 'function' ? v(el) : v\n    }\n  \n    function Bonzo(elements) {\n      this.length = 0\n      if (elements) {\n        elements = typeof elements !== 'string' &&\n          !elements.nodeType &&\n          typeof elements.length !== 'undefined' ?\n            elements :\n            [elements]\n        this.length = elements.length\n        for (var i = 0; i < elements.length; i++) {\n          this[i] = elements[i]\n        }\n      }\n    }\n  \n    Bonzo.prototype = {\n  \n        get: function (index) {\n          return this[index]\n        }\n  \n      , each: function (fn, scope) {\n          return each(this, fn, scope)\n        }\n  \n      , deepEach: function (fn, scope) {\n          return deepEach(this, fn, scope)\n        }\n  \n      , map: function (fn, reject) {\n          var m = [], n, i\n          for (i = 0; i < this.length; i++) {\n            n = fn.call(this, this[i], i)\n            reject ? (reject(n) && m.push(n)) : m.push(n)\n          }\n          return m\n        }\n  \n      , first: function () {\n          return bonzo(this.length ? this[0] : [])\n        }\n  \n      , last: function () {\n          return bonzo(this.length ? this[this.length - 1] : [])\n        }\n  \n      , html: function (h, text) {\n          var method = text ?\n            html.textContent === undefined ?\n              'innerText' :\n              'textContent' :\n            'innerHTML', m;\n          function append(el) {\n            each(normalize(h), function (node) {\n              el.appendChild(node)\n            })\n          }\n          return typeof h !== 'undefined' ?\n              this.empty().each(function (el) {\n                !text && (m = el.tagName.match(specialTags)) ?\n                  append(el, m[0]) :\n                  (el[method] = h)\n              }) :\n            this[0] ? this[0][method] : ''\n        }\n  \n      , text: function (text) {\n          return this.html(text, 1)\n        }\n  \n      , addClass: function (c) {\n          return this.each(function (el) {\n            hasClass(el, setter(el, c)) || addClass(el, setter(el, c))\n          })\n        }\n  \n      , removeClass: function (c) {\n          return this.each(function (el) {\n            hasClass(el, setter(el, c)) && removeClass(el, setter(el, c))\n          })\n        }\n  \n      , hasClass: function (c) {\n          return some(this, function (el) {\n            return hasClass(el, c)\n          })\n        }\n  \n      , toggleClass: function (c, condition) {\n          return this.each(function (el) {\n            typeof condition !== 'undefined' ?\n              condition ? addClass(el, c) : removeClass(el, c) :\n              hasClass(el, c) ? removeClass(el, c) : addClass(el, c)\n          })\n        }\n  \n      , show: function (type) {\n          return this.each(function (el) {\n            el.style.display = type || ''\n          })\n        }\n  \n      , hide: function () {\n          return this.each(function (el) {\n            el.style.display = 'none'\n          })\n        }\n  \n      , append: function (node) {\n          return this.each(function (el) {\n            each(normalize(node), function (i) {\n              el.appendChild(i)\n            })\n          })\n        }\n  \n      , prepend: function (node) {\n          return this.each(function (el) {\n            var first = el.firstChild\n            each(normalize(node), function (i) {\n              el.insertBefore(i, first)\n            })\n          })\n        }\n  \n      , appendTo: function (target, host) {\n          return insert.call(this, target, host, function (t, el) {\n            t.appendChild(el)\n          })\n        }\n  \n      , prependTo: function (target, host) {\n          return insert.call(this, target, host, function (t, el) {\n            t.insertBefore(el, t.firstChild)\n          })\n        }\n  \n      , next: function () {\n          return this.related('nextSibling')\n        }\n  \n      , previous: function () {\n          return this.related('previousSibling')\n        }\n  \n      , related: function (method) {\n          return this.map(\n            function (el) {\n              el = el[method]\n              while (el && el.nodeType !== 1) {\n                el = el[method]\n              }\n              return el || 0\n            },\n            function (el) {\n              return el\n            }\n          )\n        }\n  \n      , before: function (node) {\n          return this.each(function (el) {\n            each(bonzo.create(node), function (i) {\n              el[parentNode].insertBefore(i, el)\n            })\n          })\n        }\n  \n      , after: function (node) {\n          return this.each(function (el) {\n            each(bonzo.create(node), function (i) {\n              el[parentNode].insertBefore(i, el.nextSibling)\n            })\n          })\n        }\n  \n      , insertBefore: function (target, host) {\n          return insert.call(this, target, host, function (t, el) {\n            t[parentNode].insertBefore(el, t)\n          })\n        }\n  \n      , insertAfter: function (target, host) {\n          return insert.call(this, target, host, function (t, el) {\n            var sibling = t.nextSibling\n            if (sibling) {\n              t[parentNode].insertBefore(el, sibling);\n            }\n            else {\n              t[parentNode].appendChild(el)\n            }\n          })\n        }\n  \n      , replaceWith: function(html) {\n          this.deepEach(clearData)\n  \n          return this.each(function (el) {\n            el.parentNode.replaceChild(bonzo.create(html)[0], el)\n          })\n        }\n  \n      , css: function (o, v, p) {\n          // is this a request for just getting a style?\n          if (v === undefined && typeof o == 'string') {\n            // repurpose 'v'\n            v = this[0]\n            if (!v) {\n              return null\n            }\n            if (v === doc || v === win) {\n              p = (v === doc) ? bonzo.doc() : bonzo.viewport()\n              return o == 'width' ? p.width : o == 'height' ? p.height : ''\n            }\n            return (o = styleProperty(o)) ? getStyle(v, o) : null\n          }\n          var iter = o\n          if (typeof o == 'string') {\n            iter = {}\n            iter[o] = v\n          }\n  \n          if (ie && iter.opacity) {\n            // oh this 'ol gamut\n            iter.filter = 'alpha(opacity=' + (iter.opacity * 100) + ')'\n            // give it layout\n            iter.zoom = o.zoom || 1;\n            delete iter.opacity;\n          }\n  \n          function fn(el, p, v) {\n            for (var k in iter) {\n              if (iter.hasOwnProperty(k)) {\n                v = iter[k];\n                // change \"5\" to \"5px\" - unless you're line-height, which is allowed\n                (p = styleProperty(k)) && digit.test(v) && !(p in unitless) && (v += px)\n                el.style[p] = setter(el, v)\n              }\n            }\n          }\n          return this.each(fn)\n        }\n  \n      , offset: function (x, y) {\n          if (typeof x == 'number' || typeof y == 'number') {\n            return this.each(function (el) {\n              xy(el, x, y)\n            })\n          }\n          if (!this[0]) return {\n              top: 0\n            , left: 0\n            , height: 0\n            , width: 0\n          }\n          var el = this[0]\n            , width = el.offsetWidth\n            , height = el.offsetHeight\n            , top = el.offsetTop\n            , left = el.offsetLeft\n          while (el = el.offsetParent) {\n            top = top + el.offsetTop\n            left = left + el.offsetLeft\n          }\n  \n          return {\n              top: top\n            , left: left\n            , height: height\n            , width: width\n          }\n        }\n  \n      , dim: function () {\n          var el = this[0]\n            , orig = !el.offsetWidth && !el.offsetHeight ?\n               // el isn't visible, can't be measured properly, so fix that\n               function (t, s) {\n                  s = {\n                      position: el.style.position || ''\n                    , visibility: el.style.visibility || ''\n                    , display: el.style.display || ''\n                  }\n                  t.first().css({\n                      position: 'absolute'\n                    , visibility: 'hidden'\n                    , display: 'block'\n                  })\n                  return s\n                }(this) : null\n            , width = el.offsetWidth\n            , height = el.offsetHeight\n  \n          orig && this.first().css(orig)\n          return {\n              height: height\n            , width: width\n          }\n        }\n  \n      , attr: function (k, v) {\n          var el = this[0]\n          if (typeof k != 'string' && !(k instanceof String)) {\n            for (var n in k) {\n              k.hasOwnProperty(n) && this.attr(n, k[n])\n            }\n            return this\n          }\n          return typeof v == 'undefined' ?\n            specialAttributes.test(k) ?\n              stateAttributes.test(k) && typeof el[k] == 'string' ?\n                true : el[k] : (k == 'href' || k =='src') && features.hrefExtended ?\n                  el[getAttribute](k, 2) : el[getAttribute](k) :\n            this.each(function (el) {\n              specialAttributes.test(k) ? (el[k] = setter(el, v)) : el[setAttribute](k, setter(el, v))\n            })\n        }\n  \n      , val: function (s) {\n          return (typeof s == 'string') ? this.attr('value', s) : this[0].value\n        }\n  \n      , removeAttr: function (k) {\n          return this.each(function (el) {\n            stateAttributes.test(k) ? (el[k] = false) : el.removeAttribute(k)\n          })\n        }\n  \n      , data: function (k, v) {\n          var el = this[0], uid, o, m\n          if (typeof v === 'undefined') {\n            o = data(el)\n            if (typeof k === 'undefined') {\n              each(el.attributes, function(a) {\n                (m = (''+a.name).match(dattr)) && (o[camelize(m[1])] = dataValue(a.value))\n              })\n              return o\n            } else {\n              return typeof o[k] === 'undefined' ?\n                (o[k] = dataValue(this.attr('data-' + decamelize(k)))) : o[k]\n            }\n          } else {\n            return this.each(function (el) { data(el)[k] = v })\n          }\n        }\n  \n      , remove: function () {\n          this.deepEach(clearData)\n  \n          return this.each(function (el) {\n            el[parentNode] && el[parentNode].removeChild(el)\n          })\n        }\n  \n      , empty: function () {\n          return this.each(function (el) {\n            deepEach(el.childNodes, clearData)\n  \n            while (el.firstChild) {\n              el.removeChild(el.firstChild)\n            }\n          })\n        }\n  \n      , detach: function () {\n          return this.map(function (el) {\n            return el[parentNode].removeChild(el)\n          })\n        }\n  \n      , scrollTop: function (y) {\n          return scroll.call(this, null, y, 'y')\n        }\n  \n      , scrollLeft: function (x) {\n          return scroll.call(this, x, null, 'x')\n        }\n  \n      , toggle: function (callback, type) {\n          this.each(function (el) {\n            el.style.display = (el.offsetWidth || el.offsetHeight) ? 'none' : type || ''\n          })\n          callback && callback()\n          return this\n        }\n    }\n  \n    function normalize(node) {\n      return typeof node == 'string' ? bonzo.create(node) : isNode(node) ? [node] : node // assume [nodes]\n    }\n  \n    function scroll(x, y, type) {\n      var el = this[0]\n      if (x == null && y == null) {\n        return (isBody(el) ? getWindowScroll() : { x: el.scrollLeft, y: el.scrollTop })[type]\n      }\n      if (isBody(el)) {\n        win.scrollTo(x, y)\n      } else {\n        x != null && (el.scrollLeft = x)\n        y != null && (el.scrollTop = y)\n      }\n      return this\n    }\n  \n    function isBody(element) {\n      return element === win || (/^(?:body|html)$/i).test(element.tagName)\n    }\n  \n    function getWindowScroll() {\n      return { x: win.pageXOffset || html.scrollLeft, y: win.pageYOffset || html.scrollTop }\n    }\n  \n    function bonzo(els, host) {\n      return new Bonzo(els, host)\n    }\n  \n    bonzo.setQueryEngine = function (q) {\n      query = q;\n      delete bonzo.setQueryEngine\n    }\n  \n    bonzo.aug = function (o, target) {\n      for (var k in o) {\n        o.hasOwnProperty(k) && ((target || Bonzo.prototype)[k] = o[k])\n      }\n    }\n  \n    bonzo.create = function (node) {\n      return typeof node == 'string' && node !== '' ?\n        function () {\n          var tag = /^\\s*<([^\\s>]+)/.exec(node)\n            , el = doc.createElement('div')\n            , els = []\n            , p = tag ? tagMap[tag[1].toLowerCase()] : null\n            , dep = p ? p[2] + 1 : 1\n            , pn = parentNode\n            , tb = features.autoTbody && p && p[0] == '<table>' && !(/<tbody/i).test(node)\n  \n          el.innerHTML = p ? (p[0] + node + p[1]) : node\n          while (dep--) el = el.firstChild\n          do {\n            // tbody special case for IE<8, creates tbody on any empty table\n            // we don't want it if we're just after a <thead>, <caption>, etc.\n            if ((!tag || el.nodeType == 1) && (!tb || el.tagName.toLowerCase() != 'tbody')) {\n              els.push(el)\n            }\n          } while (el = el.nextSibling)\n          // IE < 9 gives us a parentNode which messes up insert() check for cloning\n          // `dep` > 1 can also cause problems with the insert() check (must do this last)\n          each(els, function(el) { el[pn] && el[pn].removeChild(el) })\n          return els\n  \n        }() : isNode(node) ? [node.cloneNode(true)] : []\n    }\n  \n    bonzo.doc = function () {\n      var vp = bonzo.viewport()\n      return {\n          width: Math.max(doc.body.scrollWidth, html.scrollWidth, vp.width)\n        , height: Math.max(doc.body.scrollHeight, html.scrollHeight, vp.height)\n      }\n    }\n  \n    bonzo.firstChild = function (el) {\n      for (var c = el.childNodes, i = 0, j = (c && c.length) || 0, e; i < j; i++) {\n        if (c[i].nodeType === 1) e = c[j = i]\n      }\n      return e\n    }\n  \n    bonzo.viewport = function () {\n      return {\n          width: ie ? html.clientWidth : self.innerWidth\n        , height: ie ? html.clientHeight : self.innerHeight\n      }\n    }\n  \n    bonzo.isAncestor = 'compareDocumentPosition' in html ?\n      function (container, element) {\n        return (container.compareDocumentPosition(element) & 16) == 16\n      } : 'contains' in html ?\n      function (container, element) {\n        return container !== element && container.contains(element);\n      } :\n      function (container, element) {\n        while (element = element[parentNode]) {\n          if (element === container) {\n            return true\n          }\n        }\n        return false\n      }\n  \n    bonzo.noConflict = function () {\n      context.bonzo = old\n      return this\n    }\n  \n    return bonzo\n  })\n  \n\n  provide(\"bonzo\", module.exports);\n\n  !function ($) {\n  \n    var b = require('bonzo')\n    b.setQueryEngine($)\n    $.ender(b)\n    $.ender(b(), true)\n    $.ender({\n      create: function (node) {\n        return $(b.create(node))\n      }\n    })\n  \n    $.id = function (id) {\n      return $([document.getElementById(id)])\n    }\n  \n    function indexOf(ar, val) {\n      for (var i = 0; i < ar.length; i++) if (ar[i] === val) return i\n      return -1\n    }\n  \n    function uniq(ar) {\n      var a = [], i, j\n      label:\n      for (i = 0; i < ar.length; i++) {\n        for (j = 0; j < a.length; j++) {\n          if (a[j] == ar[i]) {\n            continue label\n          }\n        }\n        a[a.length] = ar[i]\n      }\n      return a\n    }\n  \n    $.ender({\n      parents: function (selector, closest) {\n        var collection = $(selector), j, k, p, r = []\n        for (j = 0, k = this.length; j < k; j++) {\n          p = this[j]\n          while (p = p.parentNode) {\n            if (~indexOf(collection, p)) {\n              r.push(p)\n              if (closest) break;\n            }\n          }\n        }\n        return $(uniq(r))\n      },\n  \n      closest: function (selector) {\n        return this.parents(selector, true)\n      },\n  \n      first: function () {\n        return $(this.length ? this[0] : this)\n      },\n  \n      last: function () {\n        return $(this.length ? this[this.length - 1] : [])\n      },\n  \n      next: function () {\n        return $(b(this).next())\n      },\n  \n      previous: function () {\n        return $(b(this).previous())\n      },\n  \n      appendTo: function (t) {\n        return b(this.selector).appendTo(t, this)\n      },\n  \n      prependTo: function (t) {\n        return b(this.selector).prependTo(t, this)\n      },\n  \n      insertAfter: function (t) {\n        return b(this.selector).insertAfter(t, this)\n      },\n  \n      insertBefore: function (t) {\n        return b(this.selector).insertBefore(t, this)\n      },\n  \n      siblings: function () {\n        var i, l, p, r = []\n        for (i = 0, l = this.length; i < l; i++) {\n          p = this[i]\n          while (p = p.previousSibling) p.nodeType == 1 && r.push(p)\n          p = this[i]\n          while (p = p.nextSibling) p.nodeType == 1 && r.push(p)\n        }\n        return $(r)\n      },\n  \n      children: function () {\n        var i, el, r = []\n        for (i = 0, l = this.length; i < l; i++) {\n          if (!(el = b.firstChild(this[i]))) continue;\n          r.push(el)\n          while (el = el.nextSibling) el.nodeType == 1 && r.push(el)\n        }\n        return $(uniq(r))\n      },\n  \n      height: function (v) {\n        return dimension(v, this, 'height')\n      },\n  \n      width: function (v) {\n        return dimension(v, this, 'width')\n      }\n    }, true)\n  \n    function dimension(v, self, which) {\n      return v ?\n        self.css(which, v) :\n        function (r) {\n          if (!self[0]) return 0\n          r = parseInt(self.css(which), 10);\n          return isNaN(r) ? self[0]['offset' + which.replace(/^\\w/, function (m) {return m.toUpperCase()})] : r\n        }()\n    }\n  \n  }(ender);\n  \n\n}();","/home/travis/build/npmtest/node-npmtest-qwery/node_modules/qwery/src/copyright.js":"/*!\n  * @preserve Qwery - A selector engine\n  * https://github.com/ded/qwery\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n","/home/travis/build/npmtest/node-npmtest-qwery/node_modules/qwery/src/ender.js":"(function ($) {\n  var q = require('qwery')\n\n  $._select = function (s, r) {\n    // detect if sibling module 'bonzo' is available at run-time\n    // rather than load-time since technically it's not a dependency and\n    // can be loaded in any order\n    // hence the lazy function re-definition\n    return ($._select = (function () {\n      var b\n      if (typeof $.create == 'function') return function (s, r) {\n        return /^\\s*</.test(s) ? $.create(s, r) : q(s, r)\n      }\n      try {\n        b = require('bonzo')\n        return function (s, r) {\n          return /^\\s*</.test(s) ? b.create(s, r) : q(s, r)\n        }\n      } catch (e) { }\n      return q\n    })())(s, r)\n  }\n\n  $.ender({\n      find: function (s) {\n        var r = [], i, l, j, k, els\n        for (i = 0, l = this.length; i < l; i++) {\n          els = q(s, this[i])\n          for (j = 0, k = els.length; j < k; j++) r.push(els[j])\n        }\n        return $(q.uniq(r))\n      }\n    , and: function (s) {\n        var plus = $(s)\n        for (var i = this.length, j = 0, l = this.length + plus.length; i < l; i++, j++) {\n          this[i] = plus[j]\n        }\n        this.length += plus.length\n        return this\n      }\n  }, true)\n}(ender));\n","/home/travis/build/npmtest/node-npmtest-qwery/node_modules/qwery/src/qwery.js":"(function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n})('qwery', this, function () {\n\n  var classOnly = /^\\.([\\w\\-]+)$/\n    , doc = document\n    , win = window\n    , html = doc.documentElement\n    , nodeType = 'nodeType'\n  var isAncestor = 'compareDocumentPosition' in html ?\n    function (element, container) {\n      return (container.compareDocumentPosition(element) & 16) == 16\n    } :\n    function (element, container) {\n      container = container == doc || container == window ? html : container\n      return container !== element && container.contains(element)\n    }\n\n  function toArray(ar) {\n    return [].slice.call(ar, 0)\n  }\n\n  function isNode(el) {\n    var t\n    return el && typeof el === 'object' && (t = el.nodeType) && (t == 1 || t == 9)\n  }\n\n  function arrayLike(o) {\n    return (typeof o === 'object' && isFinite(o.length))\n  }\n\n  function flatten(ar) {\n    for (var r = [], i = 0, l = ar.length; i < l; ++i) arrayLike(ar[i]) ? (r = r.concat(ar[i])) : (r[r.length] = ar[i])\n    return r\n  }\n\n  function uniq(ar) {\n    var a = [], i, j\n    label:\n    for (i = 0; i < ar.length; i++) {\n      for (j = 0; j < a.length; j++) {\n        if (a[j] == ar[i]) {\n          continue label\n        }\n      }\n      a[a.length] = ar[i]\n    }\n    return a\n  }\n\n\n  function normalizeRoot(root) {\n    if (!root) return doc\n    if (typeof root == 'string') return qwery(root)[0]\n    if (!root[nodeType] && arrayLike(root)) return root[0]\n    return root\n  }\n\n  /**\n   * @param {string|Array.<Element>|Element|Node} selector\n   * @param {string|Array.<Element>|Element|Node=} opt_root\n   * @return {Array.<Element>}\n   */\n  function qwery(selector, opt_root) {\n    var m, root = normalizeRoot(opt_root)\n    if (!root || !selector) return []\n    if (selector === win || isNode(selector)) {\n      return !opt_root || (selector !== win && isNode(root) && isAncestor(selector, root)) ? [selector] : []\n    }\n    if (selector && arrayLike(selector)) return flatten(selector)\n\n\n    if (doc.getElementsByClassName && selector == 'string' && (m = selector.match(classOnly))) {\n      return toArray((root).getElementsByClassName(m[1]))\n    }\n    // using duck typing for 'a' window or 'a' document (not 'the' window || document)\n    if (selector && (selector.document || (selector.nodeType && selector.nodeType == 9))) {\n      return !opt_root ? [selector] : []\n    }\n    return toArray((root).querySelectorAll(selector))\n  }\n\n  qwery.uniq = uniq\n\n  return qwery\n}, this);\n"}